import jwt from 'jsonwebtoken'; const jwtSecret=process.env.JWT_SECRET||'change_me'; export const protect = (req,res,next)=>{ let token=null; if(req.headers.authorization && req.headers.authorization.startsWith('Bearer')) token=req.headers.authorization.split(' ')[1]; if(!token) return res.status(401).json({error:'Not authorized'}); try{ const decoded = jwt.verify(token,jwtSecret); req.user={id:decoded.id,role:decoded.role}; next(); }catch(e){console.error(e);res.status(401).json({error:'Invalid token'})} }; export const authorize=(...roles)=> (req,res,next)=>{ if(!roles.includes(req.user.role)) return res.status(403).json({error:'Forbidden'}); next(); };
